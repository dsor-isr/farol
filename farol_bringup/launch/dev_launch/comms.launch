<?xml version="1.0"?>
<launch>

    <env name="ROSCONSOLE_FORMAT" value="[${severity}] [${time}]: ${node}: ${message}"/>

    <!-- Parameters and Arguments -->
    <arg name="name"                 />                         <!-- Name of the vehicle being launched -->   
    <arg name="config_package_path"  />                         <!-- Name of the package where the configuration files are stored -->
    <arg name="folder"               default="simulation" />    <!-- Name of the folder for the configuration files --> 
    <arg name="namespace"            default="false" />
    <arg name="vehicle_id"           default="0" />

    <arg name="dmac"                 default="false"      />
    <arg name="pinger"               default="false"      />
    <arg name="replier"              default="false"      />
    <arg name="silent"               default="false"      />
    <arg name="data_serializer"      default="false"      />
    <arg name="pos2sim_modem"        default="false"      />
    <arg name="dmac2farol"           default="false"      />
    <arg name="gnss2state"           default="false"      />

    <group ns="acomms">

        <!-- Vehicle Specific Config File -->
        <arg name="dollar" value="$" />

        <!-- Launch Nodes that are common to all vehicles -->
        <!-- Modem Driver  -->
        <group if="$(arg dmac)">
          <node pkg="dmac" type="dmac" name="modem" respawn="true"/>
        </group>

        <!-- Interrogation Scheme -->
        <group if="$(arg pinger)">
            <node pkg="interrogation_scheme" type="pinger_sync_node" name="pinger" output="screen"  />
        </group>
        
        <!-- Pinger OR Replier -->
        <group if="$(arg replier)">
            <node pkg="interrogation_scheme" type="replier_sync_node"  name="replier" output="screen" />
        </group>

        <!-- Silent Scheme -->
        <group if="$(arg silent)">
            <node pkg="interrogation_scheme" type="silent_sync_node"  name="silent" output="screen" />
        </group>

        <!-- Data Serializer -->
        <group if="$(arg data_serializer)">
            <node pkg="data_serializer" type="data_serializer_node" name="data_serializer" respawn="false" output="screen" />    
        </group>

        <!-- DMAC Message Convertor -->
        <group if="$(arg dmac2farol)">
            <node pkg="evo_tools" type="dmac_to_farol_node" name="dmac2farol" respawn="false" output="screen" />
        </group>

        <!-- Convert GPS to Vehicle State -->
        <group if="$(arg gnss2state)">
            <node pkg="comms_state_broadcaster" type="gnss_to_state" name="gnss2state" respawn="false" output="screen" />
        </group>

        <!-- Position Simulator for Modem -->
        <group if="$(arg pos2sim_modem)">
            <node pkg="evo_tools" type="pos2simmodem.py" name="pos2sim_modem" respawn="false" output="screen">
                <param name="name_vehicle_id"   value="$(arg name)$(arg vehicle_id)"/>
            </node>
        </group>
    </group> 
</launch>
