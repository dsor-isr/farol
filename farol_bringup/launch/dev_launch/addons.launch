<?xml version="1.0"?>
<launch>

    <env name="ROSCONSOLE_FORMAT" value="[${severity}] [${time}]: ${node}: ${message}"/>

    <!-- Parameters and Arguments -->
    <arg name="name"            /> <!-- Name of the vehicle being launched -->   
    <arg name="config_package_path"  /> <!-- Name of the package where the configuration files are stored -->
    <arg name="folder"                      default="simulation" />  <!-- Name of the folder for the configuration files --> 
    <arg name="namespace"                   default="false" />
    <arg name="vehicle_id"                  default="0" />

    <arg name="wifi_acoustic_safety"        default="false"  /> 
    <arg name="console_path_parser"         default="false"  />   
    <arg name="console_server"              default="false"  />   
    <arg name="aggregator"                  default="false"  />   
    <arg name="rosbridge_server"            default="false"  />   
    <arg name="remote_controller"           default="false"  />   
    <arg name="joystick"                    default="false"  />   
    <arg name="joystick_mode"               default="false"  />   
    <arg name="websocket_port"              default="9090"   />

    <group ns="addons">

        <!-- Vehicle Specific Config File -->
        <arg name="dollar" value="$" />

        <!-- Launch Nodes that are common to all vehicles -->
        <!-- RosBridge Server for 3rd Party -->
        <group if="$(arg rosbridge_server)">
            <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch">
                <arg name="port" value="$(arg websocket_port)" />
            </include>    
        </group>

        <!-- Remote Controller -->
        <group if="$(arg remote_controller)">
            <node pkg="remote_controller" type="RemoteControllerNode.py" name="remote_controller" respawn="false" output="screen">
        <rosparam command="load" file="$(find remote_controller)/config/$(arg joystick)_config/$(arg joystick_mode).yaml" />
            </node>    
        </group>

        <!-- Console Path Parser -->
        <group if="$(arg console_path_parser)">
            <node pkg="console_path_parser" type="console_path_parser_node" name="console_path_parser" respawn="false" output="screen">
                <param name="path_folder" value="$(env ROS_BAG_FOLDER)/paths_from_console"/>
                <remap from="ID" to="ID_Comms"/>
            </node>
        </group>

        <!-- HTTP Server for Console -->
        <group if="$(arg console_server)">
            <node pkg="http_server" type="console.py" name="console_server" args="console" output="screen">
                <param name="type_Folder" value="$(find http_server)/../../types_FOLDER" />
                <param name="pages_folder"   value="$(find http_server)/pages/" />
            </node>
        </group>

</launch>
